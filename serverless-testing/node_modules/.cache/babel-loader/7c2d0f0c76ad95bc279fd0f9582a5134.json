{"ast":null,"code":"import \"source-map-support/register\";\nimport jwt from \"jsonwebtoken\"; // import mysql from \"mysql\";\n\nimport { createHash } from \"crypto\"; // import apiResponse from \"../libs/apiGateway\";\n// declare var process: {\n//   env: {\n//     DB_CONFIG: string;\n//   };\n// };\n// let username: string;\n// let password: string;\n// let SQL: string = `SELECT * FROM admin_users WHERE username = ?`;\n\nconst apiResponse = (status, msg) => {\n  return {\n    statusCode: status,\n    body: JSON.stringify({\n      message: msg\n    })\n  };\n};\n\nexport const hello = async event => {\n  return apiResponse(500, 'fail 44'); // const body = JSON.parse(event.body);\n  // try {\n  //   username = body.username;\n  //   password = body.password;\n  //   if (username == \"\" || password == \"\") {\n  //     return apiResponse(500,'fail 44');\n  //   }\n  // } catch (err) {\n  //   return apiResponse(500,'fail', 51);\n  // }\n  // try {\n  //   let queryResult;\n  //   let queryResultPassword;\n  //   const hashPassword = createHash(\"sha256\").update(password).digest(\"hex\");\n  //   SQL = conn.format(SQL, [username]);\n  //   queryResult = await query(SQL);\n  //   if (queryResult.length > 0) {\n  //     queryResultPassword = queryResult[0].password;\n  //     if (hashPassword == queryResultPassword) {\n  //       let token = jwt.sign(\n  //         {\n  //           id: queryResult[0].id,\n  //         },\n  //         \"secret\",\n  //         { expiresIn: \"30m\" }\n  //       );\n  //       return apiResponse(200,'success 73');\n  //     } else {\n  //       return apiResponse(500,'fail 76 ');\n  //     }\n  //   } else {\n  //     return apiResponse(500,'fail 80');\n  //   }\n  // } catch (err) {\n  //   console.log(err);\n  //   return apiResponse(500,'fail 85');\n  // } finally {\n  //   conn.end();\n  // }\n};","map":{"version":3,"sources":["/Users/logan/Documents/GitHub/serverless-testing/notes-api/tests/handler.js"],"names":["jwt","createHash","apiResponse","status","msg","statusCode","body","JSON","stringify","message","hello","event"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,cAAhB,C,CACA;;AACA,SAASC,UAAT,QAA2B,QAA3B,C,CACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,MAAMC,WAAW,GAAG,CAACC,MAAD,EAASC,GAAT,KAAiB;AACnC,SAAO;AACLC,IAAAA,UAAU,EAAEF,MADP;AAELG,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,MAAAA,OAAO,EAAEL;AADU,KAAf;AAFD,GAAP;AAMD,CAPD;;AAQA,OAAO,MAAMM,KAAK,GAAG,MAAOC,KAAP,IAAiB;AACpC,SAAOT,WAAW,CAAC,GAAD,EAAK,SAAL,CAAlB,CADoC,CAGpC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAED,CAhDM","sourcesContent":["import jwt from \"jsonwebtoken\";\n// import mysql from \"mysql\";\nimport { createHash } from \"crypto\";\n// import apiResponse from \"../libs/apiGateway\";\n\n// declare var process: {\n//   env: {\n//     DB_CONFIG: string;\n//   };\n// };\n\n// let username: string;\n// let password: string;\n// let SQL: string = `SELECT * FROM admin_users WHERE username = ?`;\n\nconst apiResponse = (status, msg) => {\n  return {\n    statusCode: status,\n    body: JSON.stringify({\n      message: msg,\n    }),\n  };\n};\nexport const hello = async (event) => {\n  return apiResponse(500,'fail 44');\n\n  // const body = JSON.parse(event.body);\n\n  // try {\n  //   username = body.username;\n  //   password = body.password;\n  //   if (username == \"\" || password == \"\") {\n  //     return apiResponse(500,'fail 44');\n  //   }\n  // } catch (err) {\n  //   return apiResponse(500,'fail', 51);\n  // }\n  // try {\n  //   let queryResult;\n  //   let queryResultPassword;\n  //   const hashPassword = createHash(\"sha256\").update(password).digest(\"hex\");\n  //   SQL = conn.format(SQL, [username]);\n  //   queryResult = await query(SQL);\n  //   if (queryResult.length > 0) {\n  //     queryResultPassword = queryResult[0].password;\n  //     if (hashPassword == queryResultPassword) {\n  //       let token = jwt.sign(\n  //         {\n  //           id: queryResult[0].id,\n  //         },\n  //         \"secret\",\n  //         { expiresIn: \"30m\" }\n  //       );\n  //       return apiResponse(200,'success 73');\n        \n  //     } else {\n  //       return apiResponse(500,'fail 76 ');\n        \n  //     }\n  //   } else {\n  //     return apiResponse(500,'fail 80');\n      \n  //   }\n  // } catch (err) {\n  //   console.log(err);\n  //   return apiResponse(500,'fail 85');\n    \n  // } finally {\n  //   conn.end();\n  // }\n\n};\n"]},"metadata":{},"sourceType":"module"}